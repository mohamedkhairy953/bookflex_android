// Generated by view binder compiler. Do not edit!
package com.folioreader.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.ImageView;
import android.widget.LinearLayout;
import android.widget.RelativeLayout;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.daimajia.swipe.SwipeLayout;
import com.folioreader.R;
import com.folioreader.ui.view.UnderlinedTextView;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class RowHighlightBinding implements ViewBinding {
  @NonNull
  private final SwipeLayout rootView;

  @NonNull
  public final RelativeLayout container;

  @NonNull
  public final ImageView ivDelete;

  @NonNull
  public final ImageView ivEditNote;

  @NonNull
  public final LinearLayout swipeLinearLayout;

  @NonNull
  public final TextView tvHighlightDate;

  @NonNull
  public final TextView tvNote;

  @NonNull
  public final UnderlinedTextView utvHighlightContent;

  private RowHighlightBinding(@NonNull SwipeLayout rootView, @NonNull RelativeLayout container,
      @NonNull ImageView ivDelete, @NonNull ImageView ivEditNote,
      @NonNull LinearLayout swipeLinearLayout, @NonNull TextView tvHighlightDate,
      @NonNull TextView tvNote, @NonNull UnderlinedTextView utvHighlightContent) {
    this.rootView = rootView;
    this.container = container;
    this.ivDelete = ivDelete;
    this.ivEditNote = ivEditNote;
    this.swipeLinearLayout = swipeLinearLayout;
    this.tvHighlightDate = tvHighlightDate;
    this.tvNote = tvNote;
    this.utvHighlightContent = utvHighlightContent;
  }

  @Override
  @NonNull
  public SwipeLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static RowHighlightBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static RowHighlightBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.row_highlight, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static RowHighlightBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.container;
      RelativeLayout container = ViewBindings.findChildViewById(rootView, id);
      if (container == null) {
        break missingId;
      }

      id = R.id.iv_delete;
      ImageView ivDelete = ViewBindings.findChildViewById(rootView, id);
      if (ivDelete == null) {
        break missingId;
      }

      id = R.id.iv_edit_note;
      ImageView ivEditNote = ViewBindings.findChildViewById(rootView, id);
      if (ivEditNote == null) {
        break missingId;
      }

      id = R.id.swipe_linear_layout;
      LinearLayout swipeLinearLayout = ViewBindings.findChildViewById(rootView, id);
      if (swipeLinearLayout == null) {
        break missingId;
      }

      id = R.id.tv_highlight_date;
      TextView tvHighlightDate = ViewBindings.findChildViewById(rootView, id);
      if (tvHighlightDate == null) {
        break missingId;
      }

      id = R.id.tv_note;
      TextView tvNote = ViewBindings.findChildViewById(rootView, id);
      if (tvNote == null) {
        break missingId;
      }

      id = R.id.utv_highlight_content;
      UnderlinedTextView utvHighlightContent = ViewBindings.findChildViewById(rootView, id);
      if (utvHighlightContent == null) {
        break missingId;
      }

      return new RowHighlightBinding((SwipeLayout) rootView, container, ivDelete, ivEditNote,
          swipeLinearLayout, tvHighlightDate, tvNote, utvHighlightContent);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
