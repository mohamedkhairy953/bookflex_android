// Generated by view binder compiler. Do not edit!
package com.folioreader.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.FrameLayout;
import android.widget.LinearLayout;
import android.widget.RelativeLayout;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.folioreader.R;
import com.folioreader.ui.view.FolioWebView;
import com.folioreader.ui.view.LoadingView;
import com.folioreader.ui.view.VerticalSeekbar;
import com.folioreader.ui.view.WebViewPager;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class FolioPageFragmentBinding implements ViewBinding {
  @NonNull
  private final RelativeLayout rootView;

  @NonNull
  public final RelativeLayout folioPageFragment;

  @NonNull
  public final FolioWebView folioWebView;

  @NonNull
  public final LinearLayout indicatorLayout;

  @NonNull
  public final LoadingView loadingView;

  @NonNull
  public final TextView minutesLeft;

  @NonNull
  public final TextView pagesLeft;

  @NonNull
  public final VerticalSeekbar scrollSeekbar;

  @NonNull
  public final FrameLayout webViewLayout;

  @NonNull
  public final WebViewPager webViewPager;

  private FolioPageFragmentBinding(@NonNull RelativeLayout rootView,
      @NonNull RelativeLayout folioPageFragment, @NonNull FolioWebView folioWebView,
      @NonNull LinearLayout indicatorLayout, @NonNull LoadingView loadingView,
      @NonNull TextView minutesLeft, @NonNull TextView pagesLeft,
      @NonNull VerticalSeekbar scrollSeekbar, @NonNull FrameLayout webViewLayout,
      @NonNull WebViewPager webViewPager) {
    this.rootView = rootView;
    this.folioPageFragment = folioPageFragment;
    this.folioWebView = folioWebView;
    this.indicatorLayout = indicatorLayout;
    this.loadingView = loadingView;
    this.minutesLeft = minutesLeft;
    this.pagesLeft = pagesLeft;
    this.scrollSeekbar = scrollSeekbar;
    this.webViewLayout = webViewLayout;
    this.webViewPager = webViewPager;
  }

  @Override
  @NonNull
  public RelativeLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static FolioPageFragmentBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static FolioPageFragmentBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.folio_page_fragment, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static FolioPageFragmentBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      RelativeLayout folioPageFragment = (RelativeLayout) rootView;

      id = R.id.folioWebView;
      FolioWebView folioWebView = ViewBindings.findChildViewById(rootView, id);
      if (folioWebView == null) {
        break missingId;
      }

      id = R.id.indicatorLayout;
      LinearLayout indicatorLayout = ViewBindings.findChildViewById(rootView, id);
      if (indicatorLayout == null) {
        break missingId;
      }

      id = R.id.loadingView;
      LoadingView loadingView = ViewBindings.findChildViewById(rootView, id);
      if (loadingView == null) {
        break missingId;
      }

      id = R.id.minutesLeft;
      TextView minutesLeft = ViewBindings.findChildViewById(rootView, id);
      if (minutesLeft == null) {
        break missingId;
      }

      id = R.id.pagesLeft;
      TextView pagesLeft = ViewBindings.findChildViewById(rootView, id);
      if (pagesLeft == null) {
        break missingId;
      }

      id = R.id.scrollSeekbar;
      VerticalSeekbar scrollSeekbar = ViewBindings.findChildViewById(rootView, id);
      if (scrollSeekbar == null) {
        break missingId;
      }

      id = R.id.webViewLayout;
      FrameLayout webViewLayout = ViewBindings.findChildViewById(rootView, id);
      if (webViewLayout == null) {
        break missingId;
      }

      id = R.id.webViewPager;
      WebViewPager webViewPager = ViewBindings.findChildViewById(rootView, id);
      if (webViewPager == null) {
        break missingId;
      }

      return new FolioPageFragmentBinding((RelativeLayout) rootView, folioPageFragment,
          folioWebView, indicatorLayout, loadingView, minutesLeft, pagesLeft, scrollSeekbar,
          webViewLayout, webViewPager);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
