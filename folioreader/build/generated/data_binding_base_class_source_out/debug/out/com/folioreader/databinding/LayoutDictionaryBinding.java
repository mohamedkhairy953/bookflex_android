// Generated by view binder compiler. Do not edit!
package com.folioreader.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.Button;
import android.widget.ImageView;
import android.widget.LinearLayout;
import android.widget.ProgressBar;
import android.widget.RelativeLayout;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.appcompat.widget.Toolbar;
import androidx.recyclerview.widget.RecyclerView;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.folioreader.R;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class LayoutDictionaryBinding implements ViewBinding {
  @NonNull
  private final RelativeLayout rootView;

  @NonNull
  public final ImageView btnClose;

  @NonNull
  public final TextView btnDictionary;

  @NonNull
  public final Button btnGoogleSearch;

  @NonNull
  public final TextView btnWikipedia;

  @NonNull
  public final RelativeLayout contentView;

  @NonNull
  public final LinearLayout layoutHeader;

  @NonNull
  public final TextView noNetwork;

  @NonNull
  public final ProgressBar progress;

  @NonNull
  public final RecyclerView rvDictResults;

  @NonNull
  public final Toolbar toolbar;

  private LayoutDictionaryBinding(@NonNull RelativeLayout rootView, @NonNull ImageView btnClose,
      @NonNull TextView btnDictionary, @NonNull Button btnGoogleSearch,
      @NonNull TextView btnWikipedia, @NonNull RelativeLayout contentView,
      @NonNull LinearLayout layoutHeader, @NonNull TextView noNetwork,
      @NonNull ProgressBar progress, @NonNull RecyclerView rvDictResults,
      @NonNull Toolbar toolbar) {
    this.rootView = rootView;
    this.btnClose = btnClose;
    this.btnDictionary = btnDictionary;
    this.btnGoogleSearch = btnGoogleSearch;
    this.btnWikipedia = btnWikipedia;
    this.contentView = contentView;
    this.layoutHeader = layoutHeader;
    this.noNetwork = noNetwork;
    this.progress = progress;
    this.rvDictResults = rvDictResults;
    this.toolbar = toolbar;
  }

  @Override
  @NonNull
  public RelativeLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static LayoutDictionaryBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static LayoutDictionaryBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.layout_dictionary, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static LayoutDictionaryBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.btn_close;
      ImageView btnClose = ViewBindings.findChildViewById(rootView, id);
      if (btnClose == null) {
        break missingId;
      }

      id = R.id.btn_dictionary;
      TextView btnDictionary = ViewBindings.findChildViewById(rootView, id);
      if (btnDictionary == null) {
        break missingId;
      }

      id = R.id.btn_google_search;
      Button btnGoogleSearch = ViewBindings.findChildViewById(rootView, id);
      if (btnGoogleSearch == null) {
        break missingId;
      }

      id = R.id.btn_wikipedia;
      TextView btnWikipedia = ViewBindings.findChildViewById(rootView, id);
      if (btnWikipedia == null) {
        break missingId;
      }

      id = R.id.contentView;
      RelativeLayout contentView = ViewBindings.findChildViewById(rootView, id);
      if (contentView == null) {
        break missingId;
      }

      id = R.id.layout_header;
      LinearLayout layoutHeader = ViewBindings.findChildViewById(rootView, id);
      if (layoutHeader == null) {
        break missingId;
      }

      id = R.id.no_network;
      TextView noNetwork = ViewBindings.findChildViewById(rootView, id);
      if (noNetwork == null) {
        break missingId;
      }

      id = R.id.progress;
      ProgressBar progress = ViewBindings.findChildViewById(rootView, id);
      if (progress == null) {
        break missingId;
      }

      id = R.id.rv_dict_results;
      RecyclerView rvDictResults = ViewBindings.findChildViewById(rootView, id);
      if (rvDictResults == null) {
        break missingId;
      }

      id = R.id.toolbar;
      Toolbar toolbar = ViewBindings.findChildViewById(rootView, id);
      if (toolbar == null) {
        break missingId;
      }

      return new LayoutDictionaryBinding((RelativeLayout) rootView, btnClose, btnDictionary,
          btnGoogleSearch, btnWikipedia, contentView, layoutHeader, noNetwork, progress,
          rvDictResults, toolbar);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
