// Generated by view binder compiler. Do not edit!
package com.folioreader.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.ImageButton;
import android.widget.RelativeLayout;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.folioreader.R;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class ItemDictionaryBinding implements ViewBinding {
  @NonNull
  private final RelativeLayout rootView_;

  @NonNull
  public final ImageButton ibSpeak;

  @NonNull
  public final RelativeLayout rootView;

  @NonNull
  public final TextView tvDefinition;

  @NonNull
  public final TextView tvExamples;

  @NonNull
  public final TextView tvWord;

  private ItemDictionaryBinding(@NonNull RelativeLayout rootView_, @NonNull ImageButton ibSpeak,
      @NonNull RelativeLayout rootView, @NonNull TextView tvDefinition,
      @NonNull TextView tvExamples, @NonNull TextView tvWord) {
    this.rootView_ = rootView_;
    this.ibSpeak = ibSpeak;
    this.rootView = rootView;
    this.tvDefinition = tvDefinition;
    this.tvExamples = tvExamples;
    this.tvWord = tvWord;
  }

  @Override
  @NonNull
  public RelativeLayout getRoot() {
    return rootView_;
  }

  @NonNull
  public static ItemDictionaryBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static ItemDictionaryBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.item_dictionary, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static ItemDictionaryBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.ib_speak;
      ImageButton ibSpeak = ViewBindings.findChildViewById(rootView, id);
      if (ibSpeak == null) {
        break missingId;
      }

      RelativeLayout rootView_ = (RelativeLayout) rootView;

      id = R.id.tv_definition;
      TextView tvDefinition = ViewBindings.findChildViewById(rootView, id);
      if (tvDefinition == null) {
        break missingId;
      }

      id = R.id.tv_examples;
      TextView tvExamples = ViewBindings.findChildViewById(rootView, id);
      if (tvExamples == null) {
        break missingId;
      }

      id = R.id.tv_word;
      TextView tvWord = ViewBindings.findChildViewById(rootView, id);
      if (tvWord == null) {
        break missingId;
      }

      return new ItemDictionaryBinding((RelativeLayout) rootView, ibSpeak, rootView_, tvDefinition,
          tvExamples, tvWord);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
