// Generated by view binder compiler. Do not edit!
package com.folioreader.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.FrameLayout;
import android.widget.ImageView;
import android.widget.LinearLayout;
import android.widget.RelativeLayout;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.appcompat.widget.Toolbar;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.folioreader.R;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class ActivityContentHighlightBinding implements ViewBinding {
  @NonNull
  private final RelativeLayout rootView;

  @NonNull
  public final ImageView btnClose;

  @NonNull
  public final TextView btnContents;

  @NonNull
  public final TextView btnHighlights;

  @NonNull
  public final LinearLayout layoutContentHighlights;

  @NonNull
  public final FrameLayout parent;

  @NonNull
  public final Toolbar toolbar;

  @NonNull
  public final View view;

  private ActivityContentHighlightBinding(@NonNull RelativeLayout rootView,
      @NonNull ImageView btnClose, @NonNull TextView btnContents, @NonNull TextView btnHighlights,
      @NonNull LinearLayout layoutContentHighlights, @NonNull FrameLayout parent,
      @NonNull Toolbar toolbar, @NonNull View view) {
    this.rootView = rootView;
    this.btnClose = btnClose;
    this.btnContents = btnContents;
    this.btnHighlights = btnHighlights;
    this.layoutContentHighlights = layoutContentHighlights;
    this.parent = parent;
    this.toolbar = toolbar;
    this.view = view;
  }

  @Override
  @NonNull
  public RelativeLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static ActivityContentHighlightBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static ActivityContentHighlightBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.activity_content_highlight, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static ActivityContentHighlightBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.btn_close;
      ImageView btnClose = ViewBindings.findChildViewById(rootView, id);
      if (btnClose == null) {
        break missingId;
      }

      id = R.id.btn_contents;
      TextView btnContents = ViewBindings.findChildViewById(rootView, id);
      if (btnContents == null) {
        break missingId;
      }

      id = R.id.btn_highlights;
      TextView btnHighlights = ViewBindings.findChildViewById(rootView, id);
      if (btnHighlights == null) {
        break missingId;
      }

      id = R.id.layout_content_highlights;
      LinearLayout layoutContentHighlights = ViewBindings.findChildViewById(rootView, id);
      if (layoutContentHighlights == null) {
        break missingId;
      }

      id = R.id.parent;
      FrameLayout parent = ViewBindings.findChildViewById(rootView, id);
      if (parent == null) {
        break missingId;
      }

      id = R.id.toolbar;
      Toolbar toolbar = ViewBindings.findChildViewById(rootView, id);
      if (toolbar == null) {
        break missingId;
      }

      id = R.id.view;
      View view = ViewBindings.findChildViewById(rootView, id);
      if (view == null) {
        break missingId;
      }

      return new ActivityContentHighlightBinding((RelativeLayout) rootView, btnClose, btnContents,
          btnHighlights, layoutContentHighlights, parent, toolbar, view);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
